{"ast":null,"code":"var _jsxFileName = \"/home/soanitech/Manil-component/src/components/avatar/Avatar.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Avatar = ({\n  id,\n  name,\n  imageUrl,\n  size,\n  variant,\n  color,\n  children,\n  badgevariant,\n  badgeColor,\n  src,\n  alt,\n  onClick,\n  style,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `avatar ${size ? `avatar-${size}` : \"\"}`,\n    ...props,\n    children: [imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-image\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `avatar-image ${variant ? `avatar-${variant}` : \"\"}`,\n        src: imageUrl,\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), badgevariant ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${badgevariant ? `avatar-${badgevariant} avatar-${badgeColor}` : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), imageUrl === undefined && name !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `avatar-text ${variant ? `avatar-${variant} ` : \"\"} ${color ? `avatar-${color}` : \"\"}`,\n      children: [children, name === null || name === void 0 ? void 0 : name.split(\" \")[0][0], name === null || name === void 0 ? void 0 : name.split(\" \")[1][0], badgevariant ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${badgevariant ? `avatar-${badgevariant} avatar-${badgeColor}` : \"\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Avatar;\nexport default Avatar;\nvar _c;\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"names":["Avatar","id","name","imageUrl","size","variant","color","children","badgevariant","badgeColor","src","alt","onClick","style","props","_jsxDEV","className","fileName","_jsxFileName","lineNumber","columnNumber","undefined","split","_c","$RefreshReg$"],"sources":["/home/soanitech/Manil-component/src/components/avatar/Avatar.tsx"],"sourcesContent":["import { AvatarProps } from \"./Avatar.type\";\n\nconst Avatar = ({\n  id,\n  name,\n  imageUrl,\n  size,\n  variant,\n  color,\n  children,\n  badgevariant,\n  badgeColor,\n  src,\n  alt,\n  onClick,\n  style,\n  ...props\n}: AvatarProps) => {\n  return (\n    <div className={`avatar ${size ? `avatar-${size}` : \"\"}`} {...props}>\n      {imageUrl && (\n        <div className=\"avatar-image\">\n          <img\n            className={`avatar-image ${variant ? `avatar-${variant}` : \"\"}`}\n            src={imageUrl}\n            alt=\"avatar\"\n          />\n          {badgevariant ? (\n            <span\n              className={`${\n                badgevariant\n                  ? `avatar-${badgevariant} avatar-${badgeColor}`\n                  : \"\"\n              }`}\n            ></span>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n\n      {imageUrl === undefined && name !== \"\" && (\n        <div\n          className={`avatar-text ${variant ? `avatar-${variant} ` : \"\"} ${\n            color ? `avatar-${color}` : \"\"\n          }`}\n        >\n          {children}\n          {name?.split(\" \")[0][0]}\n          {name?.split(\" \")[1][0]}\n          {badgevariant ? (\n            <span\n              className={`${\n                badgevariant\n                  ? `avatar-${badgevariant} avatar-${badgeColor}`\n                  : \"\"\n              }`}\n            ></span>\n          ) : (\n            \"\"\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Avatar;\n"],"mappings":";;AAEA,MAAMA,MAAM,GAAGA,CAAC;EACdC,EAAE;EACFC,IAAI;EACJC,QAAQ;EACRC,IAAI;EACJC,OAAO;EACPC,KAAK;EACLC,QAAQ;EACRC,YAAY;EACZC,UAAU;EACVC,GAAG;EACHC,GAAG;EACHC,OAAO;EACPC,KAAK;EACL,GAAGC;AACQ,CAAC,KAAK;EACjB,oBACEC,OAAA;IAAKC,SAAS,EAAG,UAASZ,IAAI,GAAI,UAASA,IAAK,EAAC,GAAG,EAAG,EAAE;IAAA,GAAKU,KAAK;IAAAP,QAAA,GAChEJ,QAAQ,iBACPY,OAAA;MAAKC,SAAS,EAAC,cAAc;MAAAT,QAAA,gBAC3BQ,OAAA;QACEC,SAAS,EAAG,gBAAeX,OAAO,GAAI,UAASA,OAAQ,EAAC,GAAG,EAAG,EAAE;QAChEK,GAAG,EAAEP,QAAS;QACdQ,GAAG,EAAC;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,EACDZ,YAAY,gBACXO,OAAA;QACEC,SAAS,EAAG,GACVR,YAAY,GACP,UAASA,YAAa,WAAUC,UAAW,EAAC,GAC7C,EACL;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,GAER,EACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAEAjB,QAAQ,KAAKkB,SAAS,IAAInB,IAAI,KAAK,EAAE,iBACpCa,OAAA;MACEC,SAAS,EAAG,eAAcX,OAAO,GAAI,UAASA,OAAQ,GAAE,GAAG,EAAG,IAC5DC,KAAK,GAAI,UAASA,KAAM,EAAC,GAAG,EAC7B,EAAE;MAAAC,QAAA,GAEFA,QAAQ,EACRL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtBpB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACtBd,YAAY,gBACXO,OAAA;QACEC,SAAS,EAAG,GACVR,YAAY,GACP,UAASA,YAAa,WAAUC,UAAW,EAAC,GAC7C,EACL;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,GAER,EACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACG,EAAA,GA/DIvB,MAAM;AAiEZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}